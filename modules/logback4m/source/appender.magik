def_slotted_exemplar(
	:appender,
	{
		{:name, _unset, :writable}
	},
	{})
$

_pragma(classify_level=basic, topic={logger})
_method appender.new(p_name)
	## Function        : Constructor
	## Parameters      : p_name: name of the appender
	## Returns         : self
	_return _clone.init(p_name)
_endmethod
$

_pragma(classify_level=restricted, topic={logger})
_private _method appender.init(p_name)
	.name << p_name
	_return _self
_endmethod
$

_pragma(classify_level=basic, topic={logger})
_abstract _method appender.do_append(p_log_event)
	## Function        : Do the append
	## Parameters      : p_log_event: Log event to append
	## Returns         : 
	
_endmethod
$
