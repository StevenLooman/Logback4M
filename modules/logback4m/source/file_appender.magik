_package logback4m

def_slotted_exemplar(
	:file_appender,
	{},
	{
		:output_stream_appender
	})
$

_pragma(classify_level=basic, topic={logger})
_method file_appender.new(p_properties, p_layout)
	## Function        : Constructor
	## Parameters      : p_properties: properties sent to the appender
	##                   p_layout: layout to use
	## Returns         : self
	_return _clone.init(p_properties, p_layout)
_endmethod
$

_pragma(classify_level=basic, topic={logger})
_private _method file_appender.init(p_properties, p_layout)
	## Function        : 
	## Parameters      : 
	## Returns         :
	_local l_filename << p_properties[:file]
	.output_stream << external_text_output_stream.new(l_filename)
	.layout << p_layout
	_return _self
_endmethod
$
