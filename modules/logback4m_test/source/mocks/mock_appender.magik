_package logback4m

def_slotted_exemplar(
	:mock_appender,
	{
		{:log_events, _unset, :readable}
	},
	{
		@logback4m:appender
	})
$

_pragma(classify_level=basic, topic={logger_test})
_method mock_appender.new()
	## Function        : Constructor
	## Parameters      : 
	## Returns         : self
	_return _clone.init(:mock_appender)
_endmethod
$

_pragma(classify_level=basic, topic={logger_test})
_private _method mock_appender.init(p_name)
	## Function        : 
	## Parameters      : 
	## Returns         : 
	.log_events << rope.new()
	_return _self
_endmethod
$

_pragma(classify_level=basic, topic={logger_test})
_method mock_appender.do_append(p_log_event)
	## Function        : record the append/log_event
	## Parameters      : p_log_event: log event
	## Returns         : 
	.log_events.add_last(p_log_event)
_endmethod
$
